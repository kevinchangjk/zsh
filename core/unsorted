#! /bin/zsh

alias yd="yarn dev"
alias yb="yarn build"
alias oc="octave"

SYNCED_DIR="$HOME/server/"

function wd() {
  case $1 in
  "up")
    rsync -a $SYNCED_DIR brew@$SV:~/files;;
  "down")
    rsync -a brew@$SV:~/files/ $SYNCED_DIR;;
  *) echo "nothing happened.";;
  esac
}

function kh() {
  echo "kitty_mod               cmd+ctrl"
  echo "ctrl + shift + equal    change_font_size     all   +0.5"
  echo "ctrl + shift + minus    change_font_size     all   -0.5"
  echo "ctrl + shift + r        change_font_size     all    0"
  echo "cmd + t                 new_tab"
  echo "cmd + w                 close_tab"
  echo "kitty_mod + enter       new_window"
  echo "kitty_mod + w           close_window"
  echo "kitty_mod + r           start_resizing_window"
  echo "kitty_mod + ,           load_config_file"
}

function g() {
  res=$(fd -t d)
  if [[ ${#res[@]} = 0 ]] then
    echo 'no children directories.'
    return
  fi
  target=$(echo $res | fzf --height=10 +m --no-mouse --reverse --no-info --prompt="  " --color='pointer:2')
  [[ ${#target} = 0 ]] && return true
  cd $target
}

function v() {
  choices=(
    university
    hcanoe
    vim
    zsh
  )
  projects=(
    $REPOS/uni/next/pages
    $REPOS/hcanoe/dev
    $REPOS/neovim
    $REPOS/zsh
  )
  string=""
  for i in $choices; do
    # string+=\\n$i
    string+=\\n$i
  done
  string=${string/\\n/}

  target=$(echo $string | fzf --height=10 --reverse --no-info)

  index=${choices[(ie)$target]}
  [[ $index = 5 ]] && return true

  cd ${projects[$index]} && nvim .
}
