" setting backup; accessible through $VIM_CONFIG/.backup directory
" $VIM_CONFIG=~/.config/.nvim
set backup
set backupdir=$VIM_CONFIG/.backup

" basic settings
syntax on
set ruler
set autoindent
set smartindent
set shiftwidth=2
set tabstop=2 softtabstop=2
set expandtab
set belloff=all
set relativenumber
set nu
set nowrap
set incsearch
set nohlsearch
set hidden
set scrolloff=16
set updatetime=50
set signcolumn=yes

filetype plugin indent on

" plugins
packloadall
call plug#begin('$VIM_CONFIG/plugged')

Plug 'nvim-lua/popup.nvim'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'nvim-telescope/telescope-fzy-native.nvim'
Plug 'BurntSushi/ripgrep'
Plug 'flazz/vim-colorschemes'
Plug 'mbbill/undotree'
Plug 'preservim/nerdtree'
Plug 'neovim/nvim-lspconfig'
Plug 'leafgarland/typescript-vim'
Plug 'tomlion/vim-solidity'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'prettier/vim-prettier', {
      \'do': 'yarn install --frozen-lockfile --production' }  

call plug#end()

" remaps
let mapleader = " "
nnoremap Y y$
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <silent> <leader>n :NERDTreeToggle<cr>
nnoremap <silent> <leader>t :UndotreeToggle<cr>

" telescope
nnoremap <leader>ff <cmd>Telescope find_files<cr>
nnoremap <leader>fg <cmd>Telescope live_grep<cr>
nnoremap <leader>fb <cmd>Telescope buffers<cr>
nnoremap <leader>fh <cmd>Telescope help_tags<cr>

" nerdtree
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') 
      \&& b:NERDTree.isTabTree() | quit | endif
let NERDTreeShowHidden=1
let NERDTreeQuitOnOpen=1

" colour scheme
set colorcolumn=80
highlight ColorColumn ctermbg=0 guibg=lightgrey
color molokai

" status bar
" STATUS LINE ------------------------------------------------------------ {{{

" Clear status line when vimrc is reloaded.
set statusline=

" Status line left side.
set statusline+=\ %F\ %M\ %Y\ %R

" Use a divider to separate the left side from the right side.
set statusline+=%=

" Status line right side.
set statusline+=\ row:\ %l\ col:\ %c\ percent:\ %p%%

" Show the status on the second to last line.
set laststatus=2

" }}}

" lsp configs
lua << EOF
require'lspconfig'.bashls.setup{}
require'lspconfig'.pyright.setup{}
require'lspconfig'.solidity_ls.setup{}
require'lspconfig'.java_language_server.setup{}
EOF
